---
name: Deploy Python ðŸš€

on:
  workflow_dispatch:

env:
  SHINYAPPSIO_ACCOUNT: vedha-viyash
  APP_PREFIX: NEST
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

jobs:
  deploy:
    defaults:
      run:
        shell: bash
    name: Publish ðŸ—ž
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/insightsengineering/rstudio_4.3.1_bioc_3.17:latest
    strategy:
      fail-fast: false
      matrix:
        directory: ["python"]
        channel: ["stable"] # TODO: add deval to the channel
    steps:
      - name: Checkout repo ðŸ›Ž
        uses: actions/checkout@v3

      - name: Set channel related constants
        run: |
          if [ "${{ matrix.channel }}" = "stable" ]; then
            echo "BRANCH_NAME=main" >> $GITHUB_ENV # TODO: Change the branch name to main
          else
            echo "BRANCH_NAME=main" >> $GITHUB_ENV # TODO: Change the branch name to deval
          fi

      - name: Setup system dependencies for cypress and python app
        run: >
          apt-get update && apt-get install --yes
          libgtk2.0-0 libgbm-dev libnotify-dev libgconf-2-4 xvfb python3.10-venv

      - name: Restore renv from cache
        uses: actions/cache@v2
        env:
          CACHE_KEY: renv-${{ runner.arch }}-${{ runner.os }}-${{ matrix.directory }}-${{ matrix.channel }}
        with:
          path: ${{ matrix.directory }}/renv/library
          key: ${{ env.CACHE_KEY }}-${{ hashFiles(format('{0}/renv.lock', matrix.directory)) }}
          restore-keys: ${{ env.CACHE_KEY }}-

      - name: Update renv.lock file with updated GitHub packages
        shell: Rscript {0}
        run: |
          setwd("${{ matrix.directory }}")
          lockfile <- renv::lockfile_read()
          pkg_name_structure <- ifelse("${{ matrix.channel }}" == "stable", "%s/%s@*release", "%s/%s")
          for (package in lockfile$Packages) {
              if (package$Source == "GitHub") {
                  renv::record(sprintf(pkg_name_structure, package$RemoteUsername, package$Package))
              }
          }

      - name: Install R packages using renv and update the renv snapshot
        shell: Rscript {0}
        working-directory: ${{ matrix.directory }}
        run: |
          options(renv.config.cache.symlinks = FALSE)
          lockfile_pkgs <- renv::lockfile_read()$Package
          github_pkgs <- names(lockfile_pkgs)[sapply(lockfile_pkgs, function(x) x$Source == "GitHub")]
          renv::restore(clean = TRUE)
          renv::update(exclude = github_pkgs)
          renv::snapshot()

      - name: Print the new renv.lock file for ${{ matrix.directory }}
        working-directory: ${{ matrix.directory }}
        run: cat renv.lock

      - name: Install deploy R package dependencies
        shell: Rscript {0}
        working-directory: ${{ matrix.directory }}
        run: |
          install.packages(c("BiocManager", "rsconnect"))

      - name: Deploy ðŸ–¨ ${{ matrix.directory }} ðŸŽ¨
        shell: Rscript {0}
        continue-on-error: true
        working-directory: ${{ matrix.directory }}
        run: |
          rsconnect::setAccountInfo(
            name = "vedha-viyash",
            token = "${{ secrets.SHINYAPPSIO_TOKEN }}",
            secret = "${{ secrets.SHINYAPPSIO_SECRET }}",
            server = "shinyapps.io"
          )
          rsconnect::deployApp(
            appName = rsconnect::generateAppName("python-test-ci"),
            appTitle = "python-test-ci",
            account = "vedha-viyash",
            upload = TRUE,
            logLevel = "normal",
            lint = FALSE,
            forceUpdate = TRUE
          )
